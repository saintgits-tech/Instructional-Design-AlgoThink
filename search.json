[
  {
    "objectID": "setup/index.html",
    "href": "setup/index.html",
    "title": "Setting Up of Quarto",
    "section": "",
    "text": "Before diving into literate programming with Quarto, ensure that your development environment is properly set up. Follow these steps to install and configure the necessary tools:",
    "crumbs": [
      "Home",
      "Setting-up"
    ]
  },
  {
    "objectID": "setup/index.html#introduction",
    "href": "setup/index.html#introduction",
    "title": "Setting Up of Quarto",
    "section": "",
    "text": "Before diving into literate programming with Quarto, ensure that your development environment is properly set up. Follow these steps to install and configure the necessary tools:",
    "crumbs": [
      "Home",
      "Setting-up"
    ]
  },
  {
    "objectID": "setup/index.html#step-1-install-python",
    "href": "setup/index.html#step-1-install-python",
    "title": "Setting Up of Quarto",
    "section": "Step 1: Install Python",
    "text": "Step 1: Install Python\nPython is essential for this workshop as it is integral to Quarto for executing code within documents, accessing a wide range of libraries and tools for data analysis and machine learning, and enabling script execution. It also integrates seamlessly with Visual Studio Code, our recommended IDE, to enhance coding efficiency and support advanced machine learning tasks. By installing Python, you set up a powerful environment that supports both technical documentation and complex computational projects.\n\nDownload and Install Python\n\nGo to the official Python website.\nDownload the latest stable version of Python suitable for your operating system (Windows, macOS, or Linux).\nRun the installer and ensure you check the box to “Add Python to PATH” during installation.\nFollow the on-screen instructions to complete the installation.",
    "crumbs": [
      "Home",
      "Setting-up"
    ]
  },
  {
    "objectID": "setup/index.html#step-2-install-visual-studio-code-vs-code",
    "href": "setup/index.html#step-2-install-visual-studio-code-vs-code",
    "title": "Setting Up of Quarto",
    "section": "Step 2: Install Visual Studio Code (VS Code)",
    "text": "Step 2: Install Visual Studio Code (VS Code)\n\nDownload and Install Visual Studio Code (VS Code)\n\nVisit the official VS Code website.\nDownload the installer for your operating system.\nRun the installer and follow the prompts to install VS Code.\nAfter installation, open VS Code and install the recommended extensions:\n\nPython Extension: Search for “Python” in the Extensions view (Ctrl+Shift+X) and install it.\nQuarto Extension: Search for “Quarto” in the Extensions view and install it.",
    "crumbs": [
      "Home",
      "Setting-up"
    ]
  },
  {
    "objectID": "setup/index.html#step-3-install-quarto-cli",
    "href": "setup/index.html#step-3-install-quarto-cli",
    "title": "Setting Up of Quarto",
    "section": "Step 3: Install Quarto CLI",
    "text": "Step 3: Install Quarto CLI\nQuarto CLI is crucial as it allows you to create, render, and manage Quarto documents and projects. Quarto CLI integrates seamlessly with your development environment, enabling you to compile literate programming documents that combine code and narrative effectively. It supports various output formats, including HTML, PDF, and slides, and facilitates the integration of code with documentation. By installing Quarto CLI, you equip yourself with the necessary tools to manage and execute Quarto projects efficiently, making it a key component of your setup for this workshop.\n\nDownload and Install Quarto CLI\n\nVisit the Quarto CLI download page.\nDownload the latest stable release of Quarto CLI for your operating system.\nRun the installer and follow the on-screen instructions to complete the installation.\nAfter installation, verify that Quarto CLI is correctly installed by opening a command line interface (Terminal on macOS/Linux, Command Prompt or PowerShell on Windows) and typing:\nquarto --version",
    "crumbs": [
      "Home",
      "Setting-up"
    ]
  },
  {
    "objectID": "setup/index.html#step-4-install-git-for-cicd",
    "href": "setup/index.html#step-4-install-git-for-cicd",
    "title": "Setting Up of Quarto",
    "section": "Step 4: Install Git for CI/CD",
    "text": "Step 4: Install Git for CI/CD\nGit is essential for version control and collaborative development, enabling you to track changes in your code, manage different versions of your projects, and collaborate effectively with others. It supports continuous integration and deployment (CI/CD) workflows, which are crucial for maintaining and deploying code systematically. Additionally, Git integrates with GitHub, allowing you to host and publish websites using GitHub Pages, providing a seamless way to share and showcase your projects online. By installing Git, you ensure that you can manage and synchronize your work efficiently, maintain a history of changes, collaborate seamlessly, and leverage GitHub Pages for web hosting throughout the workshop.\n\nDownload and Install Git\n\nVisit the official Git website.\nDownload the installer for your operating system.\nRun the installer and follow the prompts. You can use the default settings for most options.\nEnsure Git is added to your system PATH by checking the appropriate option during installation.\n\nConfigure Git\n\nOpen your command line interface (Terminal on macOS/Linux, Command Prompt or PowerShell on Windows).\nConfigure your Git username and email:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nVerify the installation by checking the Git version:\ngit --version\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf you are in a fresh Python 3 environment, installing the jupyter package will provide everything required to execute Jupyter kernels with Quarto:\npython3 -m pip install jupyter\n\n\nThe publishing workflow is the process in which external resources are prepared and collated together with the help of an authoring tool and subsequently rendered with a formatting tool to generate a publishable output that can be delivered in various forms. This is visualised by the following figure.",
    "crumbs": [
      "Home",
      "Setting-up"
    ]
  },
  {
    "objectID": "setup/index.html#literate-programming-workflow",
    "href": "setup/index.html#literate-programming-workflow",
    "title": "Setting Up of Quarto",
    "section": "Literate Programming Workflow",
    "text": "Literate Programming Workflow\n\n\n\n\n\n---\n Literate Programming Workflow\n---\ngraph TD\n    A[Python] --&gt;|Code Execution| B[Quarto CLI]\n    B --&gt;|Document Rendering| C[Technical Documents]\n    B --&gt;|Document Rendering| D[Blogs]\n    B --&gt;|Document Rendering| E[Websites]\n    E --&gt;|Host| F[GitHub Pages]\n    G[Git] --&gt;|Version Control| C\n    G --&gt;|Version Control| D\n    G --&gt;|Version Control| E\n    G --&gt;|CI/CD| F\n\n    subgraph Development\n        A\n        B\n        G\n    end\n\n    subgraph Output\n        C\n        D\n        E\n        F\n    end\n\n    style Development fill:#f9f,stroke:#333,stroke-width:2px\n    style Output fill:#ccf,stroke:#333,stroke-width:2px",
    "crumbs": [
      "Home",
      "Setting-up"
    ]
  },
  {
    "objectID": "setup/index.html#creating-your-personal-website",
    "href": "setup/index.html#creating-your-personal-website",
    "title": "Setting Up of Quarto",
    "section": "Creating Your Personal Website",
    "text": "Creating Your Personal Website\nIn the digital era, a personal website is an essential tool for engineering students looking to showcase their skills, projects, and achievements. It acts as an online portfolio, a platform for sharing insights, and a way to make a professional impression. Creating your own website involves several key steps, from planning and design to development and hosting. This guide will walk you through the process of designing a user-friendly site, building it with the right tools, testing and optimizing its performance, and finally, hosting it for the world to see. Whether you want to present your academic projects, share your resume, or maintain a blog, a well-crafted personal website can enhance your visibility and open up new opportunities in your engineering career.",
    "crumbs": [
      "Home",
      "Setting-up"
    ]
  },
  {
    "objectID": "setup/index.html#step-1-clone-the-website-template-respository-from-github",
    "href": "setup/index.html#step-1-clone-the-website-template-respository-from-github",
    "title": "Setting Up of Quarto",
    "section": "Step 1: Clone the Website template respository from Github",
    "text": "Step 1: Clone the Website template respository from Github\nCopy the following Github repo url and clone using Vscode source control.\nhttps://github.com/sijuswamy/Website-Template",
    "crumbs": [
      "Home",
      "Setting-up"
    ]
  },
  {
    "objectID": "setup/index.html#step-2-open-the-folder-in-the-vscode-and-change-and-update-the-necessary-details-and-content.",
    "href": "setup/index.html#step-2-open-the-folder-in-the-vscode-and-change-and-update-the-necessary-details-and-content.",
    "title": "Setting Up of Quarto",
    "section": "Step 2: Open the folder in the VScode and change and update the necessary details and content.",
    "text": "Step 2: Open the folder in the VScode and change and update the necessary details and content.\nYou can author Quarto documents that include Python code using any text or notebook editor. No matter what editing tool you use, you’ll always run quarto preview first to setup a live preview of changes in your document. Live preview is available for both HTML and PDF output. For example:\nUse any of the following options to create your personal website designed in Quarto.\n# preview as html\nquarto preview index.qmd\n\n# preview as pdf\nquarto preview index.qmd --to pdf\n\n# preview a jupyter notebook\nquarto preview index.ipynb\n\nRendering\nYou can use quarto render command line options to control caching behavior without changing the document’s code. Use options to force the use of caching on all chunks, disable the use of caching on all chunks (even if it’s specified in options), or to force a refresh of the cache even if it has not been invalidated:\n# use a cache (even if not enabled in options)\nquarto render example.qmd --cache \n\n# don't use a cache (even if enabled in options)\nquarto render example.qmd --no-cache \n\n# use a cache and force a refresh \nquarto render example.qmd --cache-refresh",
    "crumbs": [
      "Home",
      "Setting-up"
    ]
  },
  {
    "objectID": "setup/slides-quarto.html#step-1-install-python",
    "href": "setup/slides-quarto.html#step-1-install-python",
    "title": "Setting Up of Quarto",
    "section": "Step 1: Install Python",
    "text": "Step 1: Install Python\n\nDownload and Install Python\n\nGo to the official Python website.\nDownload the latest stable version of Python suitable for your operating system (Windows, macOS, or Linux).\nRun the installer and ensure you check the box to “Add Python to PATH” during installation.\nFollow the on-screen instructions to complete the installation."
  },
  {
    "objectID": "setup/slides-quarto.html#step-2-install-visual-studio-code-vs-code",
    "href": "setup/slides-quarto.html#step-2-install-visual-studio-code-vs-code",
    "title": "Setting Up of Quarto",
    "section": "Step 2: Install Visual Studio Code (VS Code)",
    "text": "Step 2: Install Visual Studio Code (VS Code)\n\nDownload and Install Visual Studio Code (VS Code)\n\nVisit the official VS Code website.\nDownload the installer for your operating system.\nRun the installer and follow the prompts to install VS Code.\nAfter installation, open VS Code and install the recommended extensions:\n\nPython Extension: Search for “Python” in the Extensions view (Ctrl+Shift+X) and install it.\nQuarto Extension: Search for “Quarto” in the Extensions view and install it."
  },
  {
    "objectID": "setup/slides-quarto.html#step-3-install-quarto-cli",
    "href": "setup/slides-quarto.html#step-3-install-quarto-cli",
    "title": "Setting Up of Quarto",
    "section": "Step 3: Install Quarto CLI",
    "text": "Step 3: Install Quarto CLI\n\nDownload and Install Quarto CLI\n\nVisit the Quarto CLI download page.\nDownload the latest stable release of Quarto CLI for your operating system.\nRun the installer and follow the on-screen instructions to complete the installation.\nAfter installation, verify that Quarto CLI is correctly installed by opening a command line interface (Terminal on macOS/Linux, Command Prompt or PowerShell on Windows) and typing:\nquarto --version"
  },
  {
    "objectID": "setup/slides-quarto.html#step-4-install-git-for-cicd",
    "href": "setup/slides-quarto.html#step-4-install-git-for-cicd",
    "title": "Setting Up of Quarto",
    "section": "Step 4: Install Git for CI/CD",
    "text": "Step 4: Install Git for CI/CD\n\nDownload and Install Git\n\nVisit the official Git website.\nDownload the installer for your operating system.\nRun the installer and follow the prompts. You can use the default settings for most options.\nEnsure Git is added to your system PATH by checking the appropriate option during installation.\n\nConfigure Git\n\nOpen your command line interface (Terminal on macOS/Linux, Command Prompt or PowerShell on Windows).\nConfigure your Git username and email:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nVerify the installation by checking the Git version:\ngit --version"
  },
  {
    "objectID": "setup/slides-quarto.html#literate-programming-workflow",
    "href": "setup/slides-quarto.html#literate-programming-workflow",
    "title": "Setting Up of Quarto",
    "section": "Literate Programming Workflow",
    "text": "Literate Programming Workflow\n\n\n\n\n\n---\n Literate Programming Workflow\n---\ngraph TD\n    A[Python] --&gt;|Code Execution| B[Quarto CLI]\n    B --&gt;|Document Rendering| C[Technical Documents]\n    B --&gt;|Document Rendering| D[Blogs]\n    B --&gt;|Document Rendering| E[Websites]\n    E --&gt;|Host| F[GitHub Pages]\n    G[Git] --&gt;|Version Control| C\n    G --&gt;|Version Control| D\n    G --&gt;|Version Control| E\n    G --&gt;|CI/CD| F\n\n    subgraph Development\n        A\n        B\n        G\n    end\n\n    subgraph Output\n        C\n        D\n        E\n        F\n    end\n\n    style Development fill:#f9f,stroke:#333,stroke-width:2px\n    style Output fill:#ccf,stroke:#333,stroke-width:2px"
  },
  {
    "objectID": "setup/slides-quarto.html#creating-your-personal-website",
    "href": "setup/slides-quarto.html#creating-your-personal-website",
    "title": "Setting Up of Quarto",
    "section": "Creating Your Personal Website",
    "text": "Creating Your Personal Website"
  },
  {
    "objectID": "setup/slides-quarto.html#step-1-clone-the-website-template-respository-from-github",
    "href": "setup/slides-quarto.html#step-1-clone-the-website-template-respository-from-github",
    "title": "Setting Up of Quarto",
    "section": "Step 1: Clone the Website template respository from Github",
    "text": "Step 1: Clone the Website template respository from Github\nCopy the following Github repo url and clone using Vscode source control.\nhttps://github.com/sijuswamy/Website-Template"
  },
  {
    "objectID": "setup/slides-quarto.html#step-2-open-the-folder-in-the-vscode-and-change-and-update-the-necessary-details-and-content.",
    "href": "setup/slides-quarto.html#step-2-open-the-folder-in-the-vscode-and-change-and-update-the-necessary-details-and-content.",
    "title": "Setting Up of Quarto",
    "section": "Step 2: Open the folder in the VScode and change and update the necessary details and content.",
    "text": "Step 2: Open the folder in the VScode and change and update the necessary details and content.\nUse any of the following options to create your personal website designed in Quarto.\n# preview as html\nquarto preview index.qmd\n\n# preview as pdf\nquarto preview index.qmd --to pdf\n\n# preview a jupyter notebook\nquarto preview index.ipynb\nRendering\nYou can use quarto render command line options to control caching behavior without changing the document’s code. Use options to force the use of caching on all chunks, disable the use of caching on all chunks (even if it’s specified in options), or to force a refresh of the cache even if it has not been invalidated:\n# use a cache (even if not enabled in options)\nquarto render example.qmd --cache \n\n# don't use a cache (even if enabled in options)\nquarto render example.qmd --no-cache \n\n# use a cache and force a refresh \nquarto render example.qmd --cache-refresh"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "One Day Faculty Development Programme",
    "section": "",
    "text": "Welcome Note\nWelcome to this one-day Faculty Development Program! Today, we will explore the essential role of algorithmic thinking in engineering education and how it can be effectively taught using Python programming. The focus will be on how to shift from using tools and methods to designing innovative teaching solutions. We will also delve into practical hands-on training with tools like Quarto, Raptor, and Python code visualizers, which are designed to enhance teaching methods and facilitate a deeper understanding of computational thinking.\nBy the end of the session, you will have a comprehensive understanding of how to integrate algorithmic thinking into your teaching and how to utilize Python for implementing these concepts. Additionally, you will gain practical experience with various tools that can aid in presenting and visualizing these ideas effectively.\n\n\nObjectives\n\nTo Equip faculty with the skills to teach algorithmic thinking through Python programming and effective instructional design.\nTo Provide hands-on training on tools like Quarto, Raptor, and Python code visualizers to enhance teaching methods and course delivery.\n\n\n\nAgenda\n9:00 AM – 9:30 AM: Introduction and Overview\n\nWelcome and Overview:\n\nIntroduction to the day’s goals.\nImportance of algorithmic thinking in engineering education.\n\n\n9:30 AM – 11:00 AM: Introduction to GitHub, Account Creation, and Software Installation\n\nGitHub Introduction:\n\nOverview of GitHub and its role in version control and collaboration.\nCreate a GitHub account and explore basic functionalities.\n\nSoftware Installation:\n\nPython Installation: Guide through installing Python.\nVisual Studio Code (VSCode): Installation and setup for Python development.\nQuarto CLI: Installation and initial setup for dynamic document creation.\nHands-On Activity:\n\nCreate and push a simple repository to GitHub.\nVerify installations and configurations.\nSynchronize with GitHub using VScode.\n\n\n\n11:00 AM – 11:15 AM: Tea Break\n11:15 AM – 12:00 PM: The Role of High-Level Languages\n\nConcept Introduction:\n\nImportance and advantages of high-level programming languages.\n\nHands-On Activity:\n\nCompare a simple algorithm implemented in Python with versions in other languages (e.g., C, Java).\n\n\n12:00 PM – 12:30 PM: Python Programming for Algorithmic Implementation\n\nContent Overview:\n\nBasic Python programming concepts: syntax, data types, operators.\n\nHands-On Activity:\n\nDevelop Python programs to implement various algorithms.\n\n\n12:30 PM – 1:30 PM: Lunch Break\n1:30 PM – 2:15 PM: Tool Training: Quarto\n\nIntroduction to Quarto:\n\nCreating dynamic documents and using Quarto for literate programming.\n\nHands-On Activity:\n\nCreate a Quarto document to demonstrate publishing academic documents containing Python code.\n\n\n2:15 PM – 3:00 PM: Tool Training: Raptor\n\nIntroduction to Raptor:\n\nDesigning flowcharts and simulating algorithms using Raptor.\n\nHands-On Activity:\n\nDesign and test algorithms with Raptor.\n\n\n3:00 PM – 3:20 PM: Tea Break\n3:20 PM – 4:05 PM: Tool Training: Python Code Visualizers\n\nOverview of Code Visualizers:\n\nVisualizing and debugging Python code.\n\nHands-On Activity:\n\nUse code visualizers to understand and debug Python programs.\n\n\n4:05 PM – 4:20 PM: Conclusion and Q&A\n\nRecap:\n\nSummary of the day’s key takeaways.\n\nQ&A Session:\n\nAddress any questions and provide additional resources and support.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "feedback.html",
    "href": "feedback.html",
    "title": "Feedback Analysis",
    "section": "",
    "text": "We value your feedback! Please take a moment to provide your insights on the workshop. Your responses will help us improve and tailor future sessions to better meet your needs.\n\n\nPlease rate the following statements on a scale of 1 to 5, where 1 is “Strongly Disagree” and 5 is “Strongly Agree”:\n\nHow effective was the workshop in teaching you to use Quarto for websites, blogs, and technical writing?\n\n1\n2\n3\n4\n5\n\nHow clear was the instruction on the Algorithmic Thinking Using Python?\n\n1\n2\n3\n4\n5\n\nHow beneficial was the hands-on approach to learning and applying Modern tools in Programming?\n\n1\n2\n3\n4\n5\n\nHow would you rate the knowledge and expertise of the resource person in the topics covered?\n\n1\n2\n3\n4\n5\n\nHow satisfactory was the support and assistance provided by the resource person during the workshop?\n\n1\n2\n3\n4\n5\n\n\nThank you for your feedback!\n\nYou can access the feedback form through the link below or scan the QR code to provide your responses:\nhttps://forms.gle/bHKwtrkV8JoN8KCc6"
  },
  {
    "objectID": "feedback.html#workshop-feedback-questionnaire",
    "href": "feedback.html#workshop-feedback-questionnaire",
    "title": "Feedback Analysis",
    "section": "",
    "text": "We value your feedback! Please take a moment to provide your insights on the workshop. Your responses will help us improve and tailor future sessions to better meet your needs.\n\n\nPlease rate the following statements on a scale of 1 to 5, where 1 is “Strongly Disagree” and 5 is “Strongly Agree”:\n\nHow effective was the workshop in teaching you to use Quarto for websites, blogs, and technical writing?\n\n1\n2\n3\n4\n5\n\nHow clear was the instruction on the Algorithmic Thinking Using Python?\n\n1\n2\n3\n4\n5\n\nHow beneficial was the hands-on approach to learning and applying Modern tools in Programming?\n\n1\n2\n3\n4\n5\n\nHow would you rate the knowledge and expertise of the resource person in the topics covered?\n\n1\n2\n3\n4\n5\n\nHow satisfactory was the support and assistance provided by the resource person during the workshop?\n\n1\n2\n3\n4\n5\n\n\nThank you for your feedback!\n\nYou can access the feedback form through the link below or scan the QR code to provide your responses:\nhttps://forms.gle/bHKwtrkV8JoN8KCc6"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site contains information about a FDP organised in Saintgits College of Engineering (Autonomous) to disseminate the instructional design of the foundational course “Python Programming.” The FDP will guide educators through the course’s structure, emphasizing the integration of Python programming as a tool for implementing algorithmic concepts. Participants will gain hands-on experience with key tools such as GitHub, Python, Quarto, and Raptor, which are essential for both teaching and applying these concepts effectively.",
    "crumbs": [
      "Home",
      "About"
    ]
  },
  {
    "objectID": "about.html#workshop-organisers",
    "href": "about.html#workshop-organisers",
    "title": "About",
    "section": "Workshop organisers",
    "text": "Workshop organisers\n\n\n\n\n\n\n\n\n\nDr.Nisha Joseph\n\n\n\n\n\n\n\nDr. Naveen Punnose\n\n\n\n\n\n\n\nEr. Justin Mathew",
    "crumbs": [
      "Home",
      "About"
    ]
  },
  {
    "objectID": "about.html#sidebar-image",
    "href": "about.html#sidebar-image",
    "title": "About",
    "section": "Sidebar image",
    "text": "Sidebar image\nThe sidebar image was generated by Microsoft Copilot with a prompt, “Transforming Classical Libraries to Digital Libraries with Open source.”",
    "crumbs": [
      "Home",
      "About"
    ]
  },
  {
    "objectID": "slides.html#agenda",
    "href": "slides.html#agenda",
    "title": "Hands-on Session on Quarto",
    "section": "Agenda",
    "text": "Agenda\n\nIntroduction to Quarto\nGet Started\nHands-on\n\nListings\nTemplates and Customization\nPrograming"
  },
  {
    "objectID": "slides.html#get-started",
    "href": "slides.html#get-started",
    "title": "Hands-on Session on Quarto",
    "section": "Get Started",
    "text": "Get Started\nDownloading Quarto\n\nDownload Quarto\n\nLinux\nMacOS\nWindows\n\nChoose your platform\n\nVS Code\nJupyter Notebook/Lab\nNeoVim\nRStudio"
  },
  {
    "objectID": "slides.html#listings",
    "href": "slides.html#listings",
    "title": "Hands-on Session on Quarto",
    "section": "Listings",
    "text": "Listings\n\nListings enable you to automatically generate the contents of a page (or region of a page) from a list of Quarto documents or other custom data\nUseful to create blogs, newletters\nLink to the documentation: https://quarto.org/docs/websites/website-listings.html"
  },
  {
    "objectID": "slides.html#templates-and-customization",
    "href": "slides.html#templates-and-customization",
    "title": "Hands-on Session on Quarto",
    "section": "Templates and Customization",
    "text": "Templates and Customization\n\nSearch bar\n\nhttps://quarto.org/docs/websites/website-search.html\n\nThemes\n\nhttps://quarto.org/docs/output-formats/html-themes.html\n\nTools\n\nhttps://quarto.org/docs/websites/website-tools.html"
  },
  {
    "objectID": "slides.html#programing",
    "href": "slides.html#programing",
    "title": "Hands-on Session on Quarto",
    "section": "Programing",
    "text": "Programing\n\nQuarto also provides the option to embed some code on your website\nQuarto supports Python, R, Julia and Observable Javascript\nYou can create a code block delimiting using ```\nExample of code running: https://tailor-uob.github.io/training-material/cha_odm/odm.html"
  },
  {
    "objectID": "slides.html#programing-1",
    "href": "slides.html#programing-1",
    "title": "Hands-on Session on Quarto",
    "section": "Programing",
    "text": "Programing\n\nAlso Quarto allows the creation of short codes.\nShortcodes are special markdown directives that generate various types of content. Quarto shortcodes are similar in form and function to Hugo shortcodes and WordPress shortcodes.\nDocumentation: https://quarto.org/docs/extensions/shortcodes.html"
  },
  {
    "objectID": "hands_on.html",
    "href": "hands_on.html",
    "title": "Hands-on Session on Quarto",
    "section": "",
    "text": "Introduction to Quarto\nGet Started\nHands-on\n\nListings\nTemplates and Customization\nPrograming",
    "crumbs": [
      "Home",
      "Hands-on Session on Quarto"
    ]
  },
  {
    "objectID": "hands_on.html#agenda",
    "href": "hands_on.html#agenda",
    "title": "Hands-on Session on Quarto",
    "section": "",
    "text": "Introduction to Quarto\nGet Started\nHands-on\n\nListings\nTemplates and Customization\nPrograming",
    "crumbs": [
      "Home",
      "Hands-on Session on Quarto"
    ]
  },
  {
    "objectID": "hands_on.html#get-started",
    "href": "hands_on.html#get-started",
    "title": "Hands-on Session on Quarto",
    "section": "Get Started",
    "text": "Get Started\n\nDownloading Quarto\n\nDownload Quarto\n\nLinux\nMacOS\nWindows\n\nChoose your platform\n\nVS Code\nJupyter Notebook/Lab\nNeoVim\nRStudio\n\n\n\n\n\n\nDownload Quarto\n\nDownload Quarto: https://quarto.org/docs/get-started/\nWorkshop website: https://sijuswamy.github.io/CME-workshop-1/\n\n\nSetup\n\nTerminal + Text Editor (VS Code)\nVisual Studio Code has options to use quarto in a better user interface\n\n\n\nRun the command ‘quarto create project website ’\nAlternatively, ctrl+shift+p and create the quarto project\nAutomatically Quarto will create the following directory structure:\n\n_quarto.yml\nindex.qmd\nabout.qmd\nstyles.css\n\n\n\n\nStructure\n\n.yml files\n\nYAML is a human-readable data serialization language\nYAML is an official strict superset of JSON despite looking very different from JSON.\nTo create a YAML file, use either the .yaml or .yml file extension.\n\n.qmd files\n\nWork as markdown files, but they have a configuration section in yml on the top of the file\n\n\n\n\n_quarto.yml\n\nDefines the basic structure of the website.\nAll configurations are done using yml\nSome of the configurations:\n\nNavigation bar\nSide bar\nContents",
    "crumbs": [
      "Home",
      "Hands-on Session on Quarto"
    ]
  },
  {
    "objectID": "hands_on.html#listings",
    "href": "hands_on.html#listings",
    "title": "Hands-on Session on Quarto",
    "section": "Listings",
    "text": "Listings\n\nListings enable you to automatically generate the contents of a page (or region of a page) from a list of Quarto documents or other custom data\nUseful to create blogs, newletters\nLink to the documentation: https://quarto.org/docs/websites/website-listings.html",
    "crumbs": [
      "Home",
      "Hands-on Session on Quarto"
    ]
  },
  {
    "objectID": "hands_on.html#templates-and-customization",
    "href": "hands_on.html#templates-and-customization",
    "title": "Hands-on Session on Quarto",
    "section": "Templates and Customization",
    "text": "Templates and Customization\n\nSearch bar\n\nhttps://quarto.org/docs/websites/website-search.html\n\nThemes\n\nhttps://quarto.org/docs/output-formats/html-themes.html\n\nTools\n\nhttps://quarto.org/docs/websites/website-tools.html",
    "crumbs": [
      "Home",
      "Hands-on Session on Quarto"
    ]
  },
  {
    "objectID": "hands_on.html#programing",
    "href": "hands_on.html#programing",
    "title": "Hands-on Session on Quarto",
    "section": "Programing",
    "text": "Programing\n\nQuarto also provides the option to embed some code on your website\nQuarto supports Python, R, Julia and Observable Javascript\nYou can create a code block delimiting using ```\nExample of code running: https://tailor-uob.github.io/training-material/cha_odm/odm.html",
    "crumbs": [
      "Home",
      "Hands-on Session on Quarto"
    ]
  },
  {
    "objectID": "hands_on.html#programing-1",
    "href": "hands_on.html#programing-1",
    "title": "Hands-on Session on Quarto",
    "section": "Programing",
    "text": "Programing\n\nAlso Quarto allows the creation of short codes.\nShortcodes are special markdown directives that generate various types of content. Quarto shortcodes are similar in form and function to Hugo shortcodes and WordPress shortcodes.\nDocumentation: https://quarto.org/docs/extensions/shortcodes.html",
    "crumbs": [
      "Home",
      "Hands-on Session on Quarto"
    ]
  },
  {
    "objectID": "introduction/slides-quarto.html#getting-started",
    "href": "introduction/slides-quarto.html#getting-started",
    "title": "Introduction to Literate Programming with Quarto",
    "section": "Getting started",
    "text": "Getting started\n\nGet started documentation: quarto.org/docs/get-started/\nOpen-source repository in GitHub: Quarto-cli\nCreate a project with quarto create project\n\nType: default, website, blog, manuscript, book, confluence\n\nBuild project with quarto render\nPreview with quarto preview (it autobuilds and updates when changes in the source files are detected)."
  },
  {
    "objectID": "introduction/slides-quarto.html#integrated-development-environments",
    "href": "introduction/slides-quarto.html#integrated-development-environments",
    "title": "Introduction to Literate Programming with Quarto",
    "section": "Integrated Development Environments",
    "text": "Integrated Development Environments\nQuarto is integrated in multiple IDEs"
  },
  {
    "objectID": "introduction/index.html",
    "href": "introduction/index.html",
    "title": "Introduction to Literate Programming with Quarto",
    "section": "",
    "text": "Introduction\nWelcome to Day 1 of our workshop! Today, we embark on an exploration of literate programming through the powerful open-source tool, Quarto. Literate programming is a methodology that integrates code and documentation, allowing for clearer, more maintainable, and more insightful technical writing. By the end of today, you’ll gain hands-on experience with Quarto, learning how to craft high-quality technical documents, build interactive web pages, and create engaging blogs. Our sessions are designed to provide both theoretical knowledge and practical skills, equipping you with the tools to effectively communicate your code and ideas. Let’s dive into the world of literate programming and see how Quarto can transform your documentation practices.",
    "crumbs": [
      "Home",
      "Introduction"
    ]
  },
  {
    "objectID": "introduction/index.html#unleashing-literate-programming-with-quarto",
    "href": "introduction/index.html#unleashing-literate-programming-with-quarto",
    "title": "Introduction to Literate Programming with Quarto",
    "section": "",
    "text": "Introduction\nWelcome to Day 1 of our workshop! Today, we embark on an exploration of literate programming through the powerful open-source tool, Quarto. Literate programming is a methodology that integrates code and documentation, allowing for clearer, more maintainable, and more insightful technical writing. By the end of today, you’ll gain hands-on experience with Quarto, learning how to craft high-quality technical documents, build interactive web pages, and create engaging blogs. Our sessions are designed to provide both theoretical knowledge and practical skills, equipping you with the tools to effectively communicate your code and ideas. Let’s dive into the world of literate programming and see how Quarto can transform your documentation practices.",
    "crumbs": [
      "Home",
      "Introduction"
    ]
  },
  {
    "objectID": "introduction/index.html#getting-started",
    "href": "introduction/index.html#getting-started",
    "title": "Introduction to Literate Programming with Quarto",
    "section": "Getting started",
    "text": "Getting started\n\nGet started documentation: quarto.org/docs/get-started/\nOpen-source repository in GitHub: Quarto-cli\nCreate a project with quarto create project\n\nType: default, website, blog, manuscript, book, confluence\n\nBuild project with quarto render\nPreview with quarto preview (it autobuilds and updates when changes in the source files are detected).",
    "crumbs": [
      "Home",
      "Introduction"
    ]
  },
  {
    "objectID": "introduction/index.html#integrated-development-environments",
    "href": "introduction/index.html#integrated-development-environments",
    "title": "Introduction to Literate Programming with Quarto",
    "section": "Integrated Development Environments",
    "text": "Integrated Development Environments\nThe separation of the source code and the publishable outputs is something that all Integrated Development Environments (IDEs) provide. These are tools for writing computer programs that commonly require a compilation phase which is usually integrated in the same tool. The idea of authoring tools that can create generic input artefacts that are later combined by a formatting tool is very similar to the common process followed in programming compiled programming languages. This has facilitate the adoption of IDEs as authoring tools. Microsoft Visual Studio and Posit Workbench (formerly RStudio) have tools to work with the Quarto environment. Both of them provide options for collaborative and contemporaneous editing.",
    "crumbs": [
      "Home",
      "Introduction"
    ]
  },
  {
    "objectID": "introduction/index.html#key-points-about-quarto",
    "href": "introduction/index.html#key-points-about-quarto",
    "title": "Introduction to Literate Programming with Quarto",
    "section": "Key points about Quarto",
    "text": "Key points about Quarto\n\nQuarto is a formatting tool\nuses pandoc to convert the input artefacts to various outputs.\nsupports plain text markdown, Jupyter notebooks and an augmented markdown,\nsupports dynamic content with Python, R, Julia and Observable programming languages.\nis integrated in multiple IDEs: Visual Studio, Posit Connect (former RMarkdown), Atlassian Confluence, …",
    "crumbs": [
      "Home",
      "Introduction"
    ]
  }
]